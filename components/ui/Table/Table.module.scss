.table-wrapper {
  width: 100%;

  td {
    position: relative;
    border-left: var(--table-cell-border);
    border-right: var(--table-cell-border);
    border-top: var(--table-row-border);
    border-bottom: var(--table-row-border);
  }

  table {
    // reset
    width: 100%;
    border: none;
    table-layout: fixed;
    border-spacing: 0;
    border-radius: var(--table-border-radius);

    tr {
      td {
        &:first-child {
          border-left: none;
        }

        &:last-child {
          border-right: none;
        }
      }

      &:first-child {
        td {
          border-top: none;

          &:first-child {
            border-top-left-radius: var(--table-border-radius);
          }

          &:last-child {
            border-top-right-radius: var(--table-border-radius);
          }
        }
      }

      &:last-child {
        td {
          border-bottom: none;

          &:first-child {
            border-bottom-left-radius: var(--table-border-radius);
          }

          &:last-child {
            border-bottom-right-radius: var(--table-border-radius);
          }
        }
      }
    }
  }

  &.has-border {
    table {
      tr {
        &:first-child td {
          border-top: var(--table-row-border);
        }

        &:last-child td {
          border-bottom: var(--table-row-border);
        }

        td {
          &:first-child {
            border-left: var(--table-cell-border);
          }

          &:last-child {
            border-right: var(--table-cell-border);
          }
        }
      }
    }
  }

  &.table-sticky {
    max-width: 100%;
    max-height: 100%;
    border-radius: var(--table-border-radius);

    &.table-sticky-row {
      overflow: hidden auto;

      // 2nd child sticky skips over the "empty" row colSpan fix
      tr:nth-child(2) td {
        position: sticky;
        top: 0;
        z-index: 2;
      }
    }

    &.table-sticky-column {
      overflow: auto hidden;

      table {
        tr td {
          &:first-child {
            position: sticky;
            left: 0;
            z-index: 1;

            &::after {
              content: '';
              position: absolute;
              top: 0;
              right: -1px;
              bottom: 0;
              width: 2px;
              background-color: var(--table-row-border);
            }
          }
        }
      }
    }

    &.table-sticky-row.table-sticky-column {
      overflow: auto;
    }
  }

  // cell class to prevent double-borders
  .has-span-left {
    border-left: none !important;

    // first / last row guards
    border-top-left-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
  }
}
